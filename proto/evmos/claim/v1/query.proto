syntax = "proto3";
package evmos.claim.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "evmos/claim/v1/claim.proto";
import "evmos/claim/v1/genesis.proto";

option go_package = "github.com/tharsis/evmos/x/claim/types";

// Query defines the gRPC querier service.
service Query {
  // TotalUnclaimed queries the total unclaimed tokens from the airdrop
  rpc TotalUnclaimed(QueryTotalUnclaimedRequest)
      returns (QueryTotalUnclaimedResponse) {
    option (google.api.http).get =
        "/evmos/claim/v1/total_unclaimed";
  }
  // Params returns the claim module parameters
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/evmos/claim/v1/params";
  }
  // ClaimRecord returns the claim record metadata for a given address
  rpc ClaimRecord(QueryClaimRecordRequest) returns (QueryClaimRecordResponse) {
    option (google.api.http).get =
        "/evmos/claim/v1/claim_record/{address}";
  }
// ClaimableForAction returns the total amount claimable for a given address and action
  rpc ClaimableForAction(QueryClaimableForActionRequest)
      returns (QueryClaimableForActionResponse) {
    option (google.api.http).get =
        "/evmos/claim/v1/claimable_for_action/{address}/{action}";
  }
  // TotalClaimable returns the total amount claimable for a given address
  rpc TotalClaimable(QueryTotalClaimableRequest)
      returns (QueryTotalClaimableResponse) {
    option (google.api.http).get =
        "/evmos/claim/v1/total_claimable/{address}";
  }
}

// QueryTotalUnclaimedRequest is the request type for the Query/TotalUnclaimed RPC method.
message QueryTotalUnclaimedRequest {}

// QueryTotalUnclaimedResponse is the response type for the Query/TotalUnclaimed RPC method.
message QueryTotalUnclaimedResponse {
  // coins define the unclaimed coins
  repeated cosmos.base.v1beta1.Coin coins = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryClaimRecordRequest is the request type for the Query/ClaimRecord RPC method.
message QueryClaimRecordRequest {
  string address = 1;
}

// QueryClaimRecordResponse is the response type for the Query/ClaimRecord RPC method.
message QueryClaimRecordResponse {
  ClaimRecord claim_record = 1 [(gogoproto.nullable) = false];
}

// QueryClaimableForActionRequest is the request type for the Query/ClaimableForAction RPC method.
message QueryClaimableForActionRequest {
  string address = 1;
  Action action = 2;
}

// QueryClaimableForActionResponse is the response type for the Query/ClaimableForAction RPC method.
message QueryClaimableForActionResponse {
  repeated cosmos.base.v1beta1.Coin coins = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// QueryTotalClaimableResponse is the request type for the Query/TotalClaimable RPC method.
message QueryTotalClaimableRequest {
  string address = 1;
}

// QueryTotalClaimableResponse is the response type for the Query/TotalClaimable RPC method.
message QueryTotalClaimableResponse {
  repeated cosmos.base.v1beta1.Coin coins = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}